---
title: "Distribuicoes"
author: "@BragatteMAS"
editor: source
---

```{r}
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, error = FALSE, warning = FALSE, message = FALSE, results = 'asis')
```

```{r}
## remove da memória dados anteriores
rm(list = ls())
```

## Bibliotecas

```{r}
#| output: false
## adiciona as bibliotecas de interesse
pacotes <-
    c(
        "microdatasus", ##dados do SUS
        "janitor", ## manipulação para limpeza dos dados 
        "tidytable", ## manipular dados
        "tidyverse", ##ferramentas
        "rcompanion", ## plotNormalidade
        "ggpubr" #checar distribuição
    )
## regra para se não instalado, instalar
#if(!require(pacotes))lapply(pacotes, install.packages, character.only = FALSE)
lapply(pacotes, require, character.only = TRUE)
```

## Dados - Óbitos ES

```{r}
## qual novo nome 
mortes <- 
    #selecionando dados do SUS
    fetch_datasus(
    year_start = 2021,
    month_start = 1,
    year_end = 2021,
    month_end = 12,
    uf="ES",
    information_system = "SIM-DO"
)
## ATENÇÃO
mortES <- process_sim(mortes, municipality_data = TRUE)
```

Ajustar nomes

```{r}
## Renomear as colunas do data frame
## qual novo nome 
mortes <- 
    ## limpar os nomes das colunas dos dados "covid_br"
    clean_names(mortes)
```

Nova tabela exemplo `SIR` sexo,idade,raça

```{r}
## qual novo nome - mortes com sexo idade raça
mortes_sir <-
    ## qual arquivo original
    mortes |>
    ## quais colunas eu quero
    select.(tipobito,
            dtobito,
            idade,
            sexo,
            racacor,
            estciv,
            esc2010,
            causabas_o,
            codmunres) |>
    ## quais filtros quero aplicar
    filter.(tipobito ==  2,   ## 2 = não fetal
            (!is.na(sexo)),    ## remove NA da coluna Sexo
            (!is.na(idade)),   ## remove NA da coluna Idade
            (!is.na(racacor)) ## remove NA da coluna Racacor
            ) |> 
      ## limpar os dados da coluna idade removendo caracteres não numéricos
      mutate.(
        idade = str_replace_all(idade, "\\D+", "") |> 
          as.numeric() |> 
          replace_na(0) |> 
          as.integer()
  )
```

## Distribuições

### Histograma - Hist

```{r}
hist(mortes_sir$idade)
```

#### Corrigindo idade

```{r}
## substituir a coluna idade existente com as idades corrigidas
mortes_sir$idade <- case_when(
  substr(mortes_sir$idade, 1, 1) == "0" ~ 0, ## idade menor de 1 hora
  substr(mortes_sir$idade, 1, 1) == "1" ~ as.integer(substr(mortes_sir$idade, 2, 3)), ## horas
  substr(mortes_sir$idade, 1, 1) == "2" ~ as.integer(substr(mortes_sir$idade, 2, 3)), ## dias
  substr(mortes_sir$idade, 1, 1) == "3" ~ as.integer(substr(mortes_sir$idade, 2, 3)), ## meses
  substr(mortes_sir$idade, 1, 1) == "4" ~ as.integer(substr(mortes_sir$idade, 2, 3)), ## anos
  substr(mortes_sir$idade, 1, 1) == "5" ~ as.integer(substr(mortes_sir$idade, 2, 3))+100, ## anos (mais de 100 anos)
  TRUE ~ NA_integer_
)
```

```{r}
hist(mortes_sir$idade)
```

### QQ-plot

```{r}
qqnorm(mortes_sir$idade, las = 1)
qqline(mortes_sir$idade, lty = 2, col = "red")
```

#### tipos de variáveis

Relembrando os tipos básicos de variáveis no R:

-   fct: significa variável fator, também conhecida como *variável categórica*.

-   int: significa uma variável quantitativa \\\| \*números inteiros\*.

-   dbl: significa dupla precisão, uma variável quantitativa que essencialmente é contínua \\\| \*valores decimais\*.

-   lgl: significa valor lógico, categoria verdadeiro ou falso, \`TRUE \| 1\` ou \`FALSE \| 0\`

-   chr: significa uma variável do tipo texto

-   date: \*datas\* \\\| (y-m-d) = ano-mês-dia

```{r}
tibble(mortes_sir)
```

### Rcompanion

```{r}
rcompanion::plotNormalHistogram(mortes_sir$idade)
rcompanion::plotNormalDensity(mortes_sir$idade)
rcompanion::plotDensityHistogram(mortes_sir$idade)

```

### GGpubr

```{r}
ggqqplot(mortes_sir$idade)
```

## Distributions

![](images/Screenshot%202023-03-23%20at%2023.19.14.png)

### Violin and Ridge

#### Violin

```{r}
library(ggplot2)

ggplot(warpbreaks, aes(x = tension, y = breaks, fill = tension)) +
  geom_violin(trim = FALSE) + 
  geom_boxplot(width = 0.07) +
  guides(fill = guide_legend(title = "Title")) 
```

#### Ridgeline

```{r}
remotes::install_github("R-CoderDotCom/ridgeline@main")
```

```{r}
library(ridgeline)

ridgeline(chickwts$weight, chickwts$feed,
          mode = TRUE) 

```

## Ref

[POISSON Distribution in R ▷ **dpois, ppois, qpois and rpois** functions](https://r-coder.com/poisson-distribution-r/)

-   spoiler alert - packages `GLM` (Generalized Linear Models)
